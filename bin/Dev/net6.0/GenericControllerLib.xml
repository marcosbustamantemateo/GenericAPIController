<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GenericControllerLib</name>
    </assembly>
    <members>
        <member name="T:GenericControllerLib.BusinessLogic.BusinessLogic`1">
            <summary>
                Clase que provee los métodos de la lógica de negocio común para cualquier entidad
            </summary>
            <typeparam name="T">Entidad a usar</typeparam>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Create(`0)">
            <summary>
                Crea un registro en base de datos del tipo T
            </summary>
            <param name="entity">Entidad del tipo T a crear</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Read(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
                Devuelve un listado de registros de base de datos del tipo T
            </summary>
            <param name="page">Nº de página a mostrar. Si se introduce -1 se muestran todos los resultados sin paginar</param>
            <param name="pageSize">Nº de resltados a mostrar por página</param>
            <param name="filter">Cadena de texto para filtrar por todas y cada una de las propiedas de la entidad</param>
            <param name="includeDeleted">Indica si se incluyen los elementos dados de baja</param>
            <param name="excludeActived">Indica si se excluyen los elementos dados de alta</param>
            <returns>Listado de tipo T</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Update(`0)">
            <summary>
                Actualiza en base de datos un registro del tipo T
            </summary>
            <param name="entity">Entidad del tipo T a actalizar</param>
            <returns></returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Delete(System.Int32,System.Boolean)">
            <summary>
                Elimina o da de baja un registro del tipo T en base de datos dado su Id
            </summary>
            <param name="id">Id del objeto del tipo T a buscar</param>
            <param name="saveData">Indica si en lugar de borrar el objeto solo da de baja el objeto</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Recover(System.Int32)">
            <summary>
                Da de alta un registro del tipo T en base de datos dado su Id
            </summary>
            <param name="id">Id del objeto del tipo T a buscar</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.GetByKey(System.String,System.Object)">
            <summary>
                Devuelve un registro del tipo T en base de datos dado su clave y valor dados
            </summary>
            <param name="key">Clave del objeto del tipo T a buscar</param>
            <param name="value">Valor del objeto del tipo T a buscar</param>
            <returns>Objeto del tipo T por su Código</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            Settea valores en propiedades anidadas de objetos genéricos
            </summary>
            <param name="target">Objeto en el cual se setteará el valor de la propiedad</param>
            <param name="compoundProperty">Cadena de texto que indica la anidación de las propiedades</param>
            <param name="value">Valor a settear</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GenericControllerLib.BusinessLogic.BusinessLogic`1.GetFilterExpression(System.Collections.Generic.Dictionary{System.String,System.Object})" -->
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.String)">
            <summary>
            Devuelve un listado de base de datos en función del predicado
            </summary>
            <param name="predicate">Predicado para filtrar</param>
            <param name="page">Nº de página a mostrar. Si se introduce -1 se muestran todos los resultados sin paginar</param>
            <param name="pageSize">Nº de resultados a mostrar por página</param>
            <param name="filter">Cadena de texto para filtrar por todas y cada una de las propiedas de la entidad</param>
            <returns>Listado de base de datos</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.BusinessLogic`1.BuildStringFilterExpression(System.String)">
            <summary>
                Construye una expresión lambda que filtra según una cadena de texto dada recorriendo los valores de todas las propiedades 
                de tipo string del objeto tipo T.
            </summary>
            <param name="filter">Texto a filtrar</param>
            <returns></returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.UserBL.Login(GenericControllerLib.Dto.InputLogin)">
            <summary>
            Permite al usuario con su contraseña ingresar al sistema si esta es correcta
            </summary>
            <param name="inputLogin">Modelo de usuario y contraseña</param>
            <returns>
                Devuelve el token generado si es correcto en el data de ObjectBL
                ObjectBL null si no se encuentra el usuario. Si se encuentra, RowsAffected 1 si coincide la 
                contraseña, 0 si es incorrecta
            </returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.UserBL.AssignRole(System.Int32,System.Int32)">
            <summary>
                Agrega un nuevo rol un usuario dados sus ids
            </summary>
            <param name="idUsuario">Id del usuario</param>
            <param name="idRol">Id del rol</param>
            <returns>Devuelve el objeto userRole creado</returns>
        </member>
        <member name="M:GenericControllerLib.BusinessLogic.UserBL.DeleteRole(System.Int32,System.Int32)">
            <summary>
                Borra un rol de un usuario dados sus ids
            </summary>
            <param name="idUsuario">Id del usuario</param>
            <param name="idRol">Id del rol</param>
            <returns>Devuelve el objeto userRole borrado</returns>
        </member>
        <member name="T:GenericControllerLib.Config.GenericControllerRouteConvention">
            <summary>
            
            </summary>
        </member>
        <member name="T:GenericControllerLib.Config.GenericTypeControllerFeatureProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:GenericControllerLib.Controllers.API.BaseAPIController`1">
            <summary>
                Controlador base que proporciona métodos CRUD para cualquier tipo de objeto
            </summary>
            <typeparam name="T">Entidad tipo T</typeparam>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.Create(`0)">
            <summary>
                Crea una nueva entidad
            </summary>
            <param name="entity">Objeto a crear</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.Read(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
                Devuelve un listado de entidad dada
            </summary>
            <param name="page">Nº de página a mostrar. Si se introduce -1 se muestran todos los resultados sin paginar</param>
            <param name="pageSize">Nº de resltados a mostrar por página</param>
            <param name="filter">Cadena de texto para filtrar por todas y cada una de las propiedas de la entidad</param>
            <param name="includeDeleted">Indica si se incluyen los elementos dados de baja</param>
            <param name="excludeActived">Indica si se excluyen los elementos dados de alta</param>
            <returns>Listado de entidad dada</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.Update(`0)">
            <summary>
                Actualiza una entidad
            </summary>
            <param name="entity">Objeto a actualizar</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.Delete(System.Int32,System.Boolean)">
            <summary>
                Da de baja una entidad dado su id
            </summary>
            <param name="id">Id de la entidad</param>
            <param name="saveData">Indica si en lugar de borrar el objeto solo da de baja el objeto</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.Recover(System.Int32)">
            <summary>
                Da de alta una entidad dado su id
            </summary>
            <param name="id">Id de la entidad</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.BaseAPIController`1.ReadByKey(System.String,System.String)">
            <summary>
                Devuelve una entidad dada su clave y valor
            </summary>
            <param name="key">Propiedad de la entidad a filtrar</param>
            <param name="value">Valor de la propiedad a filtrar</param>
            <returns>Entidad dada</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.UserController.Read(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
                Devuelve un listado de entidad dada
            </summary>
            <param name="page">Nº de página a mostrar. Si se introduce -1 se muestran todos los resultados sin paginar</param>
            <param name="pageSize">Nº de resltados a mostrar por página</param>
            <param name="filter">Cadena de texto para filtrar por todas y cada una de las propiedas de la entidad</param>
            <param name="includeDeleted">Indica si se incluyen los elementos dados de baja</param>
            <param name="excludeActived">Indica si se excluyen los elementos dados de alta</param>
            <returns>Listado de entidad dada</returns>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.UserController.Login(GenericControllerLib.Dto.InputLogin)">
            <summary>
                Devuelve el token que autentica y autoriza a las demás acciones de la API
            </summary>
            <param name="inputLogin">Usuario y clave a ingresar</param>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.UserController.AssignRole(System.Int32,System.Int32)">
            <summary>
                Añade un rol a un usuario dados sus ids
            </summary>
            <param name="idUsuario">Id del usuario</param>
            <param name="idRol">Id del rol</param>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.UserController.DeleteRole(System.Int32,System.Int32)">
            <summary>
                Elimina un rol de un usuario dados sus ids
            </summary>
            <param name="idUsuario">Id del usuario</param>
            <param name="idRol">Id del rol</param>
        </member>
        <member name="M:GenericControllerLib.Controllers.API.UserController.Check">
            <summary>
                Comprueba si se está autenticado
            </summary>
        </member>
        <member name="T:GenericControllerLib.Dto.BaseDto">
            <summary>
            Objeto a devolver en las respuestas de las APIs
            </summary>
            <param name="Message">Mensaje informativo</param>
            <param name="data">Dato a devolver</param>
        </member>
        <member name="M:GenericControllerLib.Dto.BaseDto.#ctor(System.String,System.Object)">
            <summary>
            Objeto a devolver en las respuestas de las APIs
            </summary>
            <param name="Message">Mensaje informativo</param>
            <param name="data">Dato a devolver</param>
        </member>
        <member name="P:GenericControllerLib.Dto.BaseDto.Message">
            <summary>Mensaje informativo</summary>
        </member>
        <member name="P:GenericControllerLib.Dto.BaseDto.data">
            <summary>Dato a devolver</summary>
        </member>
        <member name="T:GenericControllerLib.Dto.InputLogin">
            <summary>
                Clase que se usa como dto para loguearse en el sistema
            </summary>
        </member>
        <member name="T:GenericControllerLib.Models.GeneratedControllerAttribute">
            <summary>
                Anotación que genera un controlador de forma dinámica con los
                métodos CRUD
            </summary>
        </member>
        <member name="T:GenericControllerLib.Models.BaseObject">
            <summary>
                Objeto base con propiedades comunes en todas las entidades
                del proyecto
            </summary>
        </member>
        <member name="P:GenericControllerLib.Models.BaseObject.Id">
            <summary>
                Identificador del objeto.
            </summary>
        </member>
        <member name="P:GenericControllerLib.Models.BaseObject.CreatedDate">
            <summary>
                Fecha de alta de creación del objeto
            </summary>
        </member>
        <member name="P:GenericControllerLib.Models.BaseObject.DeletedDate">
            <summary>
                Fecha de baja del objeto
            </summary>
        </member>
        <member name="P:GenericControllerLib.Models.BaseObject.Code">
            <summary>
                Código del objeto.
            </summary>
        </member>
        <member name="P:GenericControllerLib.Models.BaseObject.Description">
            <summary>
                Descripción del objeto.
            </summary>
        </member>
        <member name="T:GenericControllerLib.Models.Role">
            <summary>
                Clase que implementa el rol para estandar identity de .net
            </summary>
        </member>
        <member name="T:GenericControllerLib.Models.User">
            <summary>
                Clase que implementa el usuario para estandar identity de .net
            </summary>
        </member>
    </members>
</doc>
